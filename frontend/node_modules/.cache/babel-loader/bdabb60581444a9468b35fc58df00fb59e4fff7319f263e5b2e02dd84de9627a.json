{"ast":null,"code":"var _jsxFileName = \"/Users/josuelegarda/Desktop/car-lease-app/frontend/src/components/graphRecommendations.js\";\n/**\n * Creates bar charts from the recommendations provided from GPT API and analysis from the analysisService.js script\n */\n\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, ReferenceLine, LabelList } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarRecommendationCharts = ({\n  analysisResult\n}) => {\n  if (!analysisResult || !analysisResult.success) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full p-4 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: \"Error loading recommendation data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n  const {\n    paymentCalculations,\n    monthlyPaymentComparison,\n    userCriteria\n  } = analysisResult;\n\n  // Helper function to parse car info\n  const parseCarInfo = carData => {\n    if (carData.original_data && carData.original_data.make) {\n      return {\n        make: carData.original_data.make || 'Unknown',\n        trim: carData.original_data.trim || 'Base',\n        year: carData.original_data.year || new Date().getFullYear()\n      };\n    }\n    const carInfoParts = carData.car_info.split(' ');\n    const yearMatch = carData.car_info.match(/20\\d{2}/);\n    return {\n      make: carInfoParts[0] || 'Unknown',\n      trim: carInfoParts.slice(2).join(' ') || 'Base',\n      year: yearMatch ? parseInt(yearMatch[0]) : new Date().getFullYear()\n    };\n  };\n\n  // Sort cars by budget status\n  const sortedSections = {\n    within_budget: [],\n    below_budget: [],\n    above_budget: [],\n    no_budget_set: []\n  };\n  Object.keys(paymentCalculations).forEach(carKey => {\n    var _monthlyPaymentCompar;\n    const carData = paymentCalculations[carKey];\n    const budgetStatus = ((_monthlyPaymentCompar = monthlyPaymentComparison[carKey]) === null || _monthlyPaymentCompar === void 0 ? void 0 : _monthlyPaymentCompar.status) || 'no_budget_set';\n    if (!carData.error) {\n      var _carData$scenarios$;\n      const carInfo = parseCarInfo(carData);\n      const originalDownPayment = userCriteria.downPayment || 0;\n\n      // Prepare chart data\n      const chartData = carData.scenarios.map((scenario, index) => ({\n        downPayment: scenario.down_payment,\n        monthlyPayment: scenario.monthly_payment,\n        downPaymentFormatted: new Intl.NumberFormat('en-US', {\n          style: 'currency',\n          currency: 'USD',\n          minimumFractionDigits: 0,\n          maximumFractionDigits: 0\n        }).format(scenario.down_payment),\n        isOriginal: scenario.scenario === 'original'\n      }));\n      sortedSections[budgetStatus].push({\n        carKey,\n        carInfo,\n        title: `${carInfo.year} ${carInfo.make} ${carInfo.trim}`,\n        chartData,\n        originalDownPayment,\n        budgetInfo: monthlyPaymentComparison[carKey],\n        originalMonthlyPayment: ((_carData$scenarios$ = carData.scenarios[0]) === null || _carData$scenarios$ === void 0 ? void 0 : _carData$scenarios$.monthly_payment) || 0\n      });\n    }\n  });\n\n  // Sort within each section by monthly payment\n  Object.keys(sortedSections).forEach(section => {\n    sortedSections[section].sort((a, b) => a.originalMonthlyPayment - b.originalMonthlyPayment);\n  });\n  const sectionOrder = ['within_budget', 'below_budget', 'above_budget', 'no_budget_set'];\n  const sectionLabels = {\n    within_budget: 'Within Budget',\n    below_budget: 'Below Budget',\n    above_budget: 'Above Budget',\n    no_budget_set: 'No Budget Set'\n  };\n  const sectionColors = {\n    within_budget: '#27ae60',\n    below_budget: '#f39c12',\n    above_budget: '#e74c3c',\n    no_budget_set: '#6c757d'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full space-y-8\",\n    children: sectionOrder.map(sectionKey => {\n      const section = sortedSections[sectionKey];\n      if (!section || section.length === 0) return null;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-4 px-6 rounded-lg font-bold text-xl\",\n          style: {\n            backgroundColor: `${sectionColors[sectionKey]}20`,\n            color: sectionColors[sectionKey],\n            border: `2px solid ${sectionColors[sectionKey]}`\n          },\n          children: sectionLabels[sectionKey]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), section.map(({\n          carKey,\n          title,\n          chartData,\n          originalDownPayment,\n          budgetInfo\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center text-xl font-bold mb-4\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), budgetInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 p-3 bg-gray-50 rounded text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Current Monthly Payment:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 24\n              }, this), \" \", new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: 'USD',\n                minimumFractionDigits: 0\n              }).format(budgetInfo.monthly_payment)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this), budgetInfo.user_min_budget && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Your Budget Range:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 26\n              }, this), \" \", new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: 'USD',\n                minimumFractionDigits: 0\n              }).format(budgetInfo.user_min_budget), \" - \", new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: 'USD',\n                minimumFractionDigits: 0\n              }).format(budgetInfo.user_max_budget)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-96\",\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                data: chartData,\n                margin: {\n                  top: 40,\n                  right: 30,\n                  left: 60,\n                  bottom: 60\n                },\n                children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"downPaymentFormatted\",\n                  angle: -45,\n                  textAnchor: \"end\",\n                  height: 80,\n                  interval: 0,\n                  fontSize: 12,\n                  label: {\n                    value: 'Down Payment',\n                    position: 'insideBottom',\n                    offset: -10,\n                    style: {\n                      textAnchor: 'middle',\n                      fill: '#000',\n                      fontSize: 14,\n                      fontWeight: 'bold'\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  tickFormatter: value => new Intl.NumberFormat('en-US', {\n                    style: 'currency',\n                    currency: 'USD',\n                    minimumFractionDigits: 0,\n                    maximumFractionDigits: 0\n                  }).format(value),\n                  label: {\n                    value: 'Monthly Payment',\n                    angle: -90,\n                    position: 'insideLeft',\n                    style: {\n                      textAnchor: 'middle',\n                      fill: '#000',\n                      fontSize: 14,\n                      fontWeight: 'bold'\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  formatter: value => [new Intl.NumberFormat('en-US', {\n                    style: 'currency',\n                    currency: 'USD',\n                    minimumFractionDigits: 0,\n                    maximumFractionDigits: 0\n                  }).format(value), 'Monthly Payment'],\n                  labelFormatter: label => `Down Payment: ${label}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"monthlyPayment\",\n                  fill: \"#3498db\",\n                  stroke: \"#2980b9\",\n                  strokeWidth: 1,\n                  children: /*#__PURE__*/_jsxDEV(LabelList, {\n                    dataKey: \"monthlyPayment\",\n                    position: \"top\",\n                    formatter: value => new Intl.NumberFormat('en-US', {\n                      style: 'currency',\n                      currency: 'USD',\n                      minimumFractionDigits: 0,\n                      maximumFractionDigits: 0\n                    }).format(value),\n                    style: {\n                      fill: '#2c3e50',\n                      fontSize: 11,\n                      fontWeight: 500\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this), originalDownPayment > 0 && /*#__PURE__*/_jsxDEV(ReferenceLine, {\n                  x: new Intl.NumberFormat('en-US', {\n                    style: 'currency',\n                    currency: 'USD',\n                    minimumFractionDigits: 0,\n                    maximumFractionDigits: 0\n                  }).format(originalDownPayment),\n                  stroke: \"#e74c3c\",\n                  strokeDasharray: \"5 5\",\n                  strokeWidth: 3,\n                  label: {\n                    value: 'Your Original Down Payment',\n                    position: 'topLeft',\n                    fill: '#e74c3c',\n                    fontSize: 12,\n                    fontWeight: 'bold'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)]\n        }, carKey, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this))]\n      }, sectionKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_c = CarRecommendationCharts;\nexport default CarRecommendationCharts;\nvar _c;\n$RefreshReg$(_c, \"CarRecommendationCharts\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","ReferenceLine","LabelList","jsxDEV","_jsxDEV","CarRecommendationCharts","analysisResult","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","paymentCalculations","monthlyPaymentComparison","userCriteria","parseCarInfo","carData","original_data","make","trim","year","Date","getFullYear","carInfoParts","car_info","split","yearMatch","match","slice","join","parseInt","sortedSections","within_budget","below_budget","above_budget","no_budget_set","Object","keys","forEach","carKey","_monthlyPaymentCompar","budgetStatus","status","error","_carData$scenarios$","carInfo","originalDownPayment","downPayment","chartData","scenarios","map","scenario","index","down_payment","monthlyPayment","monthly_payment","downPaymentFormatted","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","isOriginal","push","title","budgetInfo","originalMonthlyPayment","section","sort","a","b","sectionOrder","sectionLabels","sectionColors","sectionKey","length","backgroundColor","color","border","user_min_budget","user_max_budget","width","height","data","margin","top","right","left","bottom","dataKey","angle","textAnchor","interval","fontSize","label","value","position","offset","fill","fontWeight","tickFormatter","formatter","labelFormatter","stroke","strokeWidth","x","strokeDasharray","_c","$RefreshReg$"],"sources":["/Users/josuelegarda/Desktop/car-lease-app/frontend/src/components/graphRecommendations.js"],"sourcesContent":["/**\n * Creates bar charts from the recommendations provided from GPT API and analysis from the analysisService.js script\n */\n\nimport React from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  ReferenceLine,\n  LabelList\n} from 'recharts';\n\nconst CarRecommendationCharts = ({ analysisResult }) => {\n  if (!analysisResult || !analysisResult.success) {\n    return (\n      <div className=\"w-full p-4 text-center\">\n        <p className=\"text-red-500\">Error loading recommendation data</p>\n      </div>\n    );\n  }\n\n  const { paymentCalculations, monthlyPaymentComparison, userCriteria } = analysisResult;\n  \n  // Helper function to parse car info\n  const parseCarInfo = (carData) => {\n    if (carData.original_data && carData.original_data.make) {\n      return {\n        make: carData.original_data.make || 'Unknown',\n        trim: carData.original_data.trim || 'Base',\n        year: carData.original_data.year || new Date().getFullYear()\n      };\n    }\n\n    const carInfoParts = carData.car_info.split(' ');\n    const yearMatch = carData.car_info.match(/20\\d{2}/);\n    \n    return {\n      make: carInfoParts[0] || 'Unknown',\n      trim: carInfoParts.slice(2).join(' ') || 'Base',\n      year: yearMatch ? parseInt(yearMatch[0]) : new Date().getFullYear()\n    };\n  };\n\n  // Sort cars by budget status\n  const sortedSections = {\n    within_budget: [],\n    below_budget: [],\n    above_budget: [],\n    no_budget_set: []\n  };\n\n  Object.keys(paymentCalculations).forEach(carKey => {\n    const carData = paymentCalculations[carKey];\n    const budgetStatus = monthlyPaymentComparison[carKey]?.status || 'no_budget_set';\n    \n    if (!carData.error) {\n      const carInfo = parseCarInfo(carData);\n      const originalDownPayment = userCriteria.downPayment || 0;\n      \n      // Prepare chart data\n      const chartData = carData.scenarios.map((scenario, index) => ({\n        downPayment: scenario.down_payment,\n        monthlyPayment: scenario.monthly_payment,\n        downPaymentFormatted: new Intl.NumberFormat('en-US', {\n          style: 'currency',\n          currency: 'USD',\n          minimumFractionDigits: 0,\n          maximumFractionDigits: 0\n        }).format(scenario.down_payment),\n        isOriginal: scenario.scenario === 'original'\n      }));\n\n      sortedSections[budgetStatus].push({\n        carKey,\n        carInfo,\n        title: `${carInfo.year} ${carInfo.make} ${carInfo.trim}`,\n        chartData,\n        originalDownPayment,\n        budgetInfo: monthlyPaymentComparison[carKey],\n        originalMonthlyPayment: carData.scenarios[0]?.monthly_payment || 0\n      });\n    }\n  });\n\n  // Sort within each section by monthly payment\n  Object.keys(sortedSections).forEach(section => {\n    sortedSections[section].sort((a, b) => a.originalMonthlyPayment - b.originalMonthlyPayment);\n  });\n\n  const sectionOrder = ['within_budget', 'below_budget', 'above_budget', 'no_budget_set'];\n  const sectionLabels = {\n    within_budget: 'Within Budget',\n    below_budget: 'Below Budget',\n    above_budget: 'Above Budget',\n    no_budget_set: 'No Budget Set'\n  };\n\n  const sectionColors = {\n    within_budget: '#27ae60',\n    below_budget: '#f39c12',\n    above_budget: '#e74c3c',\n    no_budget_set: '#6c757d'\n  };\n\n  return (\n    <div className=\"w-full space-y-8\">\n      {sectionOrder.map(sectionKey => {\n        const section = sortedSections[sectionKey];\n        \n        if (!section || section.length === 0) return null;\n\n        return (\n          <div key={sectionKey} className=\"space-y-6\">\n            {/* Section Header */}\n            <div \n              className=\"text-center py-4 px-6 rounded-lg font-bold text-xl\"\n              style={{ \n                backgroundColor: `${sectionColors[sectionKey]}20`,\n                color: sectionColors[sectionKey],\n                border: `2px solid ${sectionColors[sectionKey]}`\n              }}\n            >\n              {sectionLabels[sectionKey]}\n            </div>\n\n            {/* Charts in this section */}\n            {section.map(({ carKey, title, chartData, originalDownPayment, budgetInfo }) => (\n              <div key={carKey} className=\"bg-white rounded-lg shadow-lg p-6\">\n                {/* Chart Title */}\n                <h3 className=\"text-center text-xl font-bold mb-4\">{title}</h3>\n                \n                {/* Budget Info */}\n                {budgetInfo && (\n                  <div className=\"mb-4 p-3 bg-gray-50 rounded text-sm\">\n                    <p><strong>Current Monthly Payment:</strong> {new Intl.NumberFormat('en-US', {\n                      style: 'currency',\n                      currency: 'USD',\n                      minimumFractionDigits: 0\n                    }).format(budgetInfo.monthly_payment)}</p>\n                    {budgetInfo.user_min_budget && (\n                      <p><strong>Your Budget Range:</strong> {new Intl.NumberFormat('en-US', {\n                        style: 'currency',\n                        currency: 'USD',\n                        minimumFractionDigits: 0\n                      }).format(budgetInfo.user_min_budget)} - {new Intl.NumberFormat('en-US', {\n                        style: 'currency',\n                        currency: 'USD',\n                        minimumFractionDigits: 0\n                      }).format(budgetInfo.user_max_budget)}</p>\n                    )}\n                  </div>\n                )}\n\n                {/* Chart */}\n                <div className=\"h-96\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <BarChart \n                      data={chartData} \n                      margin={{ top: 40, right: 30, left: 60, bottom: 60 }}\n                    >\n                      <XAxis\n                        dataKey=\"downPaymentFormatted\"\n                        angle={-45}\n                        textAnchor=\"end\"\n                        height={80}\n                        interval={0}\n                        fontSize={12}\n                        label={{\n                          value: 'Down Payment',\n                          position: 'insideBottom',\n                          offset: -10,\n                          style: { textAnchor: 'middle', fill: '#000', fontSize: 14, fontWeight: 'bold' }\n                        }}\n                      />\n                      \n                      <YAxis\n                        tickFormatter={(value) =>\n                          new Intl.NumberFormat('en-US', {\n                            style: 'currency',\n                            currency: 'USD',\n                            minimumFractionDigits: 0,\n                            maximumFractionDigits: 0\n                          }).format(value)\n                        }\n                        label={{\n                          value: 'Monthly Payment',\n                          angle: -90,\n                          position: 'insideLeft',\n                          style: { textAnchor: 'middle', fill: '#000', fontSize: 14, fontWeight: 'bold' }\n                        }}\n                      />\n\n                      <Tooltip\n                        formatter={(value) => [\n                          new Intl.NumberFormat('en-US', {\n                            style: 'currency',\n                            currency: 'USD',\n                            minimumFractionDigits: 0,\n                            maximumFractionDigits: 0\n                          }).format(value),\n                          'Monthly Payment'\n                        ]}\n                        labelFormatter={(label) => `Down Payment: ${label}`}\n                      />\n\n                      <Bar \n                        dataKey=\"monthlyPayment\" \n                        fill=\"#3498db\"\n                        stroke=\"#2980b9\"\n                        strokeWidth={1}\n                      >\n                        <LabelList\n                          dataKey=\"monthlyPayment\"\n                          position=\"top\"\n                          formatter={(value) =>\n                            new Intl.NumberFormat('en-US', {\n                              style: 'currency',\n                              currency: 'USD',\n                              minimumFractionDigits: 0,\n                              maximumFractionDigits: 0\n                            }).format(value)\n                          }\n                          style={{\n                            fill: '#2c3e50',\n                            fontSize: 11,\n                            fontWeight: 500\n                          }}\n                        />\n                      </Bar>\n\n                      {/* Red vertical line for original down payment */}\n                      {originalDownPayment > 0 && (\n                        <ReferenceLine\n                          x={new Intl.NumberFormat('en-US', {\n                            style: 'currency',\n                            currency: 'USD',\n                            minimumFractionDigits: 0,\n                            maximumFractionDigits: 0\n                          }).format(originalDownPayment)}\n                          stroke=\"#e74c3c\"\n                          strokeDasharray=\"5 5\"\n                          strokeWidth={3}\n                          label={{\n                            value: 'Your Original Down Payment',\n                            position: 'topLeft',\n                            fill: '#e74c3c',\n                            fontSize: 12,\n                            fontWeight: 'bold'\n                          }}\n                        />\n                      )}\n                    </BarChart>\n                  </ResponsiveContainer>\n                </div>\n              </div>\n            ))}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CarRecommendationCharts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}