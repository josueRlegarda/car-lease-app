{"ast":null,"code":"var _jsxFileName = \"/Users/josuelegarda/Desktop/car-lease-app/frontend/src/components/LeaseApprovalChart.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer, ReferenceLine, LabelList } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeaseBudgetChart = ({\n  monthlyIncome,\n  creditScore\n}) => {\n  // Step 1: Define your data based on credit tiers\n  const data = [{\n    creditScore: 500,\n    monthlyPayment: monthlyIncome * 0.12\n  }, {\n    creditScore: 600,\n    monthlyPayment: monthlyIncome * 0.13\n  }, {\n    creditScore: 650,\n    monthlyPayment: monthlyIncome * 0.14\n  }, {\n    creditScore: 700,\n    monthlyPayment: monthlyIncome * 0.15\n  }, {\n    creditScore: 800,\n    monthlyPayment: monthlyIncome * 0.15\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-[400px] relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center text-xl font-bold mb-4\",\n      children: \"Credit Score vs Monthly Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        margin: {\n          top: 10,\n          right: 30,\n          left: 20,\n          bottom: 40\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"creditScore\",\n          type: \"number\",\n          domain: [500, 800],\n          ticks: [500, 550, 600, 650, 700, 750, 800],\n          label: {\n            value: 'Credit Score',\n            position: 'insideBottom',\n            offset: -5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          dataKey: \"monthlyPayment\",\n          tickFormatter: value => new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD'\n          }).format(value),\n          label: {\n            value: 'Monthly Payment',\n            angle: -90,\n            position: 'insideLeft',\n            offset: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD'\n          }).format(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"monthlyPayment\",\n          stroke: \"#4F46E5\",\n          strokeWidth: 3,\n          dot: {\n            r: 5\n          },\n          children: /*#__PURE__*/_jsxDEV(LabelList, {\n            dataKey: \"monthlyPayment\",\n            position: \"top\",\n            formatter: value => new Intl.NumberFormat('en-US', {\n              style: 'currency',\n              currency: 'USD'\n            }).format(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n          x: creditScore,\n          stroke: \"red\",\n          strokeDasharray: \"4 4\",\n          ifOverflow: \"visible\",\n          label: {\n            value: `Your Score (${creditScore})`,\n            position: 'top',\n            fill: 'red',\n            fontSize: 12,\n            fontWeight: 'bold'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = LeaseBudgetChart;\nexport default LeaseBudgetChart;\nvar _c;\n$RefreshReg$(_c, \"LeaseBudgetChart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","ReferenceLine","LabelList","jsxDEV","_jsxDEV","LeaseBudgetChart","monthlyIncome","creditScore","data","monthlyPayment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","type","domain","ticks","label","value","position","offset","tickFormatter","Intl","NumberFormat","style","currency","format","angle","formatter","stroke","strokeWidth","dot","r","x","ifOverflow","fill","fontSize","fontWeight","_c","$RefreshReg$"],"sources":["/Users/josuelegarda/Desktop/car-lease-app/frontend/src/components/LeaseApprovalChart.js"],"sourcesContent":["import React from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  ResponsiveContainer,\n  ReferenceLine,\n  LabelList\n} from 'recharts';\n\nconst LeaseBudgetChart = ({ monthlyIncome, creditScore }) => {\n  // Step 1: Define your data based on credit tiers\n  const data = [\n    { creditScore: 500, monthlyPayment: monthlyIncome * 0.12 },\n    { creditScore: 600, monthlyPayment: monthlyIncome * 0.13 },\n    { creditScore: 650, monthlyPayment: monthlyIncome * 0.14 },\n    { creditScore: 700, monthlyPayment: monthlyIncome * 0.15 },\n    { creditScore: 800, monthlyPayment: monthlyIncome * 0.15 }\n  ];\n\n  return (\n    <div className=\"w-full h-[400px] relative\">\n      <h2 className=\"text-center text-xl font-bold mb-4\">Credit Score vs Monthly Payment</h2>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart data={data} margin={{ top: 10, right: 30, left: 20, bottom: 40 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n\n          <XAxis\n            dataKey=\"creditScore\"\n            type=\"number\"\n            domain={[500, 800]}\n            ticks={[500, 550, 600, 650, 700, 750, 800]}\n            label={{ value: 'Credit Score', position: 'insideBottom', offset: -5 }}\n          />\n\n          <YAxis\n            dataKey=\"monthlyPayment\"\n            tickFormatter={(value) =>\n              new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: 'USD'\n              }).format(value)\n            }\n            label={{\n              value: 'Monthly Payment',\n              angle: -90,\n              position: 'insideLeft',\n              offset: 0\n            }}\n          />\n\n          <Tooltip\n            formatter={(value) =>\n              new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: 'USD'\n              }).format(value)\n            }\n          />\n\n          <Line\n            type=\"monotone\"\n            dataKey=\"monthlyPayment\"\n            stroke=\"#4F46E5\"\n            strokeWidth={3}\n            dot={{ r: 5 }}\n          >\n            <LabelList\n              dataKey=\"monthlyPayment\"\n              position=\"top\"\n              formatter={(value) =>\n                new Intl.NumberFormat('en-US', {\n                  style: 'currency',\n                  currency: 'USD'\n                }).format(value)\n              }\n            />\n          </Line>\n\n          {/* Red vertical reference line */}\n          <ReferenceLine\n            x={creditScore}\n            stroke=\"red\"\n            strokeDasharray=\"4 4\"\n            ifOverflow=\"visible\"\n            label={{\n              value: `Your Score (${creditScore})`,\n              position: 'top',\n              fill: 'red',\n              fontSize: 12,\n              fontWeight: 'bold'\n            }}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default LeaseBudgetChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}