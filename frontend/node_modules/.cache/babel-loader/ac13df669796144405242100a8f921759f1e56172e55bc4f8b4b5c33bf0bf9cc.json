{"ast":null,"code":"var _jsxFileName = \"/Users/josuelegarda/Desktop/car-lease-app/frontend/src/components/LeaseApprovalChart.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer, ReferenceLine, LabelList } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeaseBudgetChart = ({\n  monthlyIncome,\n  creditScore\n}) => {\n  const rounded = value => Math.round(value);\n  const data = [{\n    creditScore: 500,\n    monthlyPayment: rounded(monthlyIncome * 0.12)\n  }, {\n    creditScore: 600,\n    monthlyPayment: rounded(monthlyIncome * 0.13)\n  }, {\n    creditScore: 650,\n    monthlyPayment: rounded(monthlyIncome * 0.14)\n  }, {\n    creditScore: 700,\n    monthlyPayment: rounded(monthlyIncome * 0.15)\n  }, {\n    creditScore: 800,\n    monthlyPayment: rounded(monthlyIncome * 0.15)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-[400px] relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center text-xl font-bold mb-4\",\n      children: \"Credit Score vs Estimated Monthly Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        width: 600,\n        height: 300,\n        margin: {\n          top: 40,\n          right: 30,\n          left: 20,\n          bottom: 40\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"creditScore\",\n          type: \"number\",\n          padding: {\n            left: 30\n          },\n          tickCount: 7,\n          ticks: [500, 550, 600, 650, 700, 750, 800],\n          label: {\n            value: 'Credit Score',\n            position: 'insideBottom',\n            offset: -5,\n            dy: 10,\n            dx: 0,\n            style: {\n              textAnchor: 'middle',\n              fill: '#000',\n              fontSize: 15\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          dataKey: \"monthlyPayment\",\n          tickFormatter: value => new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n          }).format(value),\n          label: {\n            value: 'Estimated Monthly Payment',\n            angle: -90,\n            position: 'insideLeft',\n            dy: 0,\n            dx: -10,\n            style: {\n              textAnchor: 'middle',\n              fill: '#000',\n              fontSize: 15\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n          }).format(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"stepAfter\",\n          dataKey: \"monthlyPayment\",\n          stroke: \"#4F46E5\",\n          strokeWidth: 3,\n          dot: {\n            r: 5\n          },\n          children: /*#__PURE__*/_jsxDEV(LabelList, {\n            dataKey: \"monthlyPayment\",\n            position: \"top\",\n            formatter: value => new Intl.NumberFormat('en-US', {\n              style: 'currency',\n              currency: 'USD',\n              minimumFractionDigits: 0,\n              maximumFractionDigits: 0\n            }).format(value),\n            style: {\n              fill: '#0000FF',\n              fontSize: 13,\n              fontWeight: 500\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n          x: creditScore,\n          stroke: \"red\",\n          strokeDasharray: \"3 3\",\n          ifOverflow: \"extendDomain\",\n          label: {\n            value: `Your Credit Score:(${creditScore})`,\n            position: 'top',\n            fill: 'red',\n            fontSize: 12,\n            fontWeight: 'bold'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = LeaseBudgetChart;\nexport default LeaseBudgetChart;\nvar _c;\n$RefreshReg$(_c, \"LeaseBudgetChart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","ReferenceLine","LabelList","jsxDEV","_jsxDEV","LeaseBudgetChart","monthlyIncome","creditScore","rounded","value","Math","round","data","monthlyPayment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","type","padding","tickCount","ticks","label","position","offset","dy","dx","style","textAnchor","fill","fontSize","tickFormatter","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","angle","formatter","stroke","strokeWidth","dot","r","fontWeight","x","ifOverflow","_c","$RefreshReg$"],"sources":["/Users/josuelegarda/Desktop/car-lease-app/frontend/src/components/LeaseApprovalChart.js"],"sourcesContent":["import React from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  ResponsiveContainer,\n  ReferenceLine,\n  LabelList\n} from 'recharts';\n\nconst LeaseBudgetChart = ({ monthlyIncome, creditScore }) => {\n  const rounded = (value) => Math.round(value);\n\n  const data = [\n    { creditScore: 500, monthlyPayment: rounded(monthlyIncome * 0.12) },\n    { creditScore: 600, monthlyPayment: rounded(monthlyIncome * 0.13) },\n    { creditScore: 650, monthlyPayment: rounded(monthlyIncome * 0.14) },\n    { creditScore: 700, monthlyPayment: rounded(monthlyIncome * 0.15) },\n    { creditScore: 800, monthlyPayment: rounded(monthlyIncome * 0.15) }\n  ];\n\n  return (\n    <div className=\"w-full h-[400px] relative\">\n      <h2 className=\"text-center text-xl font-bold mb-4\">Credit Score vs Estimated Monthly Payment</h2>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart \n            data={data} \n            width={600}\n            height={300}\n            margin={{ top: 40, right: 30, left: 20, bottom: 40 }\n        }>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n\n          <XAxis\n            dataKey=\"creditScore\"\n            type=\"number\"\n            padding={{ left:30 }}\n            tickCount={7}\n            ticks={[500, 550, 600, 650, 700, 750, 800]}\n            label={{ \n                value: 'Credit Score', \n                position: 'insideBottom', \n                offset: -5,\n                dy: 10,\n                dx: 0,\n                style: { textAnchor: 'middle', fill: '#000', fontSize: 15 }\n            }}\n          />\n\n          <YAxis\n            dataKey=\"monthlyPayment\"\n            tickFormatter={(value) =>\n              new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: 'USD',\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0\n              }).format(value)\n            }\n            label={{\n                value: 'Estimated Monthly Payment',\n                angle: -90,\n                position: 'insideLeft',\n                dy: 0,\n                dx:-10 ,\n                style: { textAnchor: 'middle', fill: '#000', fontSize: 15 }\n            }}\n          />\n\n          <Tooltip\n            formatter={(value) =>\n              new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: 'USD',\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0\n              }).format(value)\n            }\n          />\n\n          <Line\n            type=\"stepAfter\"\n            dataKey=\"monthlyPayment\"\n            stroke=\"#4F46E5\"\n            strokeWidth={3}\n            dot={{ r: 5 }}\n          >\n            <LabelList\n              dataKey=\"monthlyPayment\"\n              position=\"top\"\n              formatter={(value) =>\n                new Intl.NumberFormat('en-US', {\n                  style: 'currency',\n                  currency: 'USD',\n                  minimumFractionDigits: 0,\n                  maximumFractionDigits: 0\n              }).format(value)\n              }\n              style={{\n              fill: '#0000FF',     \n              fontSize: 13,\n              fontWeight: 500\n              }}\n            />\n          </Line>\n\n          <ReferenceLine\n            x={creditScore}\n            stroke=\"red\"\n            strokeDasharray=\"3 3\"\n            ifOverflow=\"extendDomain\"\n            label={{\n              value: `Your Credit Score:(${creditScore})`,\n              position: 'top',\n              fill: 'red',\n              fontSize: 12,\n              fontWeight: 'bold'\n            }}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default LeaseBudgetChart;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,OAAO,EACPC,aAAa,EACbC,mBAAmB,EACnBC,aAAa,EACbC,SAAS,QACJ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAY,CAAC,KAAK;EAC3D,MAAMC,OAAO,GAAIC,KAAK,IAAKC,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC;EAE5C,MAAMG,IAAI,GAAG,CACX;IAAEL,WAAW,EAAE,GAAG;IAAEM,cAAc,EAAEL,OAAO,CAACF,aAAa,GAAG,IAAI;EAAE,CAAC,EACnE;IAAEC,WAAW,EAAE,GAAG;IAAEM,cAAc,EAAEL,OAAO,CAACF,aAAa,GAAG,IAAI;EAAE,CAAC,EACnE;IAAEC,WAAW,EAAE,GAAG;IAAEM,cAAc,EAAEL,OAAO,CAACF,aAAa,GAAG,IAAI;EAAE,CAAC,EACnE;IAAEC,WAAW,EAAE,GAAG;IAAEM,cAAc,EAAEL,OAAO,CAACF,aAAa,GAAG,IAAI;EAAE,CAAC,EACnE;IAAEC,WAAW,EAAE,GAAG;IAAEM,cAAc,EAAEL,OAAO,CAACF,aAAa,GAAG,IAAI;EAAE,CAAC,CACpE;EAED,oBACEF,OAAA;IAAKU,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxCX,OAAA;MAAIU,SAAS,EAAC,oCAAoC;MAAAC,QAAA,EAAC;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjGf,OAAA,CAACJ,mBAAmB;MAACoB,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAAAN,QAAA,eAC7CX,OAAA,CAACV,SAAS;QACNkB,IAAI,EAAEA,IAAK;QACXQ,KAAK,EAAE,GAAI;QACXC,MAAM,EAAE,GAAI;QACZC,MAAM,EAAE;UAAEC,GAAG,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,IAAI,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAG,CACtD;QAAAX,QAAA,gBACCX,OAAA,CAACL,aAAa;UAAC4B,eAAe,EAAC;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEvCf,OAAA,CAACR,KAAK;UACJgC,OAAO,EAAC,aAAa;UACrBC,IAAI,EAAC,QAAQ;UACbC,OAAO,EAAE;YAAEL,IAAI,EAAC;UAAG,CAAE;UACrBM,SAAS,EAAE,CAAE;UACbC,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;UAC3CC,KAAK,EAAE;YACHxB,KAAK,EAAE,cAAc;YACrByB,QAAQ,EAAE,cAAc;YACxBC,MAAM,EAAE,CAAC,CAAC;YACVC,EAAE,EAAE,EAAE;YACNC,EAAE,EAAE,CAAC;YACLC,KAAK,EAAE;cAAEC,UAAU,EAAE,QAAQ;cAAEC,IAAI,EAAE,MAAM;cAAEC,QAAQ,EAAE;YAAG;UAC9D;QAAE;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEFf,OAAA,CAACP,KAAK;UACJ+B,OAAO,EAAC,gBAAgB;UACxBc,aAAa,EAAGjC,KAAK,IACnB,IAAIkC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;YAC7BN,KAAK,EAAE,UAAU;YACjBO,QAAQ,EAAE,KAAK;YACfC,qBAAqB,EAAE,CAAC;YACxBC,qBAAqB,EAAE;UACzB,CAAC,CAAC,CAACC,MAAM,CAACvC,KAAK,CAChB;UACDwB,KAAK,EAAE;YACHxB,KAAK,EAAE,2BAA2B;YAClCwC,KAAK,EAAE,CAAC,EAAE;YACVf,QAAQ,EAAE,YAAY;YACtBE,EAAE,EAAE,CAAC;YACLC,EAAE,EAAC,CAAC,EAAE;YACNC,KAAK,EAAE;cAAEC,UAAU,EAAE,QAAQ;cAAEC,IAAI,EAAE,MAAM;cAAEC,QAAQ,EAAE;YAAG;UAC9D;QAAE;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEFf,OAAA,CAACN,OAAO;UACNoD,SAAS,EAAGzC,KAAK,IACf,IAAIkC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;YAC7BN,KAAK,EAAE,UAAU;YACjBO,QAAQ,EAAE,KAAK;YACfC,qBAAqB,EAAE,CAAC;YACxBC,qBAAqB,EAAE;UACzB,CAAC,CAAC,CAACC,MAAM,CAACvC,KAAK;QAChB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eAEFf,OAAA,CAACT,IAAI;UACHkC,IAAI,EAAC,WAAW;UAChBD,OAAO,EAAC,gBAAgB;UACxBuB,MAAM,EAAC,SAAS;UAChBC,WAAW,EAAE,CAAE;UACfC,GAAG,EAAE;YAAEC,CAAC,EAAE;UAAE,CAAE;UAAAvC,QAAA,eAEdX,OAAA,CAACF,SAAS;YACR0B,OAAO,EAAC,gBAAgB;YACxBM,QAAQ,EAAC,KAAK;YACdgB,SAAS,EAAGzC,KAAK,IACf,IAAIkC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;cAC7BN,KAAK,EAAE,UAAU;cACjBO,QAAQ,EAAE,KAAK;cACfC,qBAAqB,EAAE,CAAC;cACxBC,qBAAqB,EAAE;YAC3B,CAAC,CAAC,CAACC,MAAM,CAACvC,KAAK,CACd;YACD6B,KAAK,EAAE;cACPE,IAAI,EAAE,SAAS;cACfC,QAAQ,EAAE,EAAE;cACZc,UAAU,EAAE;YACZ;UAAE;YAAAvC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEPf,OAAA,CAACH,aAAa;UACZuD,CAAC,EAAEjD,WAAY;UACf4C,MAAM,EAAC,KAAK;UACZxB,eAAe,EAAC,KAAK;UACrB8B,UAAU,EAAC,cAAc;UACzBxB,KAAK,EAAE;YACLxB,KAAK,EAAE,sBAAsBF,WAAW,GAAG;YAC3C2B,QAAQ,EAAE,KAAK;YACfM,IAAI,EAAE,KAAK;YACXC,QAAQ,EAAE,EAAE;YACZc,UAAU,EAAE;UACd;QAAE;UAAAvC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACuC,EAAA,GAjHIrD,gBAAgB;AAmHtB,eAAeA,gBAAgB;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}