{"ast":null,"code":"var _jsxFileName = \"/Users/josuelegarda/Desktop/car-lease-app/frontend/src/components/LeaseApprovalChart.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine, Label, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeaseApprovalChart = ({\n  monthlyIncome,\n  creditScore\n}) => {\n  const creditRanges = [500, 600, 650, 700, 800];\n  const getLeaseAmount = score => {\n    if (score >= 700) return monthlyIncome * 0.15;\n    if (score >= 650) return monthlyIncome * 0.14;\n    if (score >= 600) return monthlyIncome * 0.13;\n    return monthlyIncome * 0.12;\n  };\n  const formatCurrency = value => {\n    return `$${Number(value).toLocaleString()}`;\n  };\n  const data = creditRanges.map(score => ({\n    creditScore: score,\n    leaseAmount: Math.round(getLeaseAmount(score))\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center text-xl font-semibold mb-4\",\n      children: \"Credit Score vs Monthly Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 350,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        margin: {\n          top: 20,\n          right: 40,\n          bottom: 40,\n          left: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"creditScore\",\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            value: \"Credit Score\",\n            offset: -10,\n            position: \"insideBottom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          tickFormatter: formatCurrency,\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            value: \"Monthly Payment\",\n            angle: -90,\n            position: \"insideLeft\",\n            style: {\n              textAnchor: 'middle'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => formatCurrency(value),\n          labelFormatter: label => `Score: ${label}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"linear\",\n          dataKey: \"leaseAmount\",\n          stroke: \"#3b82f6\",\n          strokeWidth: 3,\n          dot: {\n            r: 6,\n            stroke: '#3b82f6',\n            strokeWidth: 2,\n            fill: 'white'\n          },\n          label: ({\n            x,\n            y,\n            value\n          }) => /*#__PURE__*/_jsxDEV(\"text\", {\n            x: x,\n            y: y - 10,\n            textAnchor: \"middle\",\n            fill: \"#333\",\n            fontSize: 12,\n            children: formatCurrency(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n          x: creditScore,\n          stroke: \"red\",\n          strokeDasharray: \"4 4\",\n          ifOverflow: \"visible\",\n          label: {\n            value: `Your Score (${creditScore})`,\n            position: 'top',\n            fill: 'red',\n            fontWeight: 'bold',\n            fontSize: 12\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = LeaseApprovalChart;\nexport default LeaseApprovalChart;\nvar _c;\n$RefreshReg$(_c, \"LeaseApprovalChart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ReferenceLine","Label","ResponsiveContainer","jsxDEV","_jsxDEV","LeaseApprovalChart","monthlyIncome","creditScore","creditRanges","getLeaseAmount","score","formatCurrency","value","Number","toLocaleString","data","map","leaseAmount","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","bottom","left","strokeDasharray","dataKey","offset","position","tickFormatter","angle","style","textAnchor","formatter","labelFormatter","label","type","stroke","strokeWidth","dot","r","fill","x","y","fontSize","ifOverflow","fontWeight","_c","$RefreshReg$"],"sources":["/Users/josuelegarda/Desktop/car-lease-app/frontend/src/components/LeaseApprovalChart.js"],"sourcesContent":["import React from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ReferenceLine,\n  Label,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst LeaseApprovalChart = ({ monthlyIncome, creditScore }) => {\n  const creditRanges = [500, 600, 650, 700, 800];\n\n  const getLeaseAmount = (score) => {\n    if (score >= 700) return monthlyIncome * 0.15;\n    if (score >= 650) return monthlyIncome * 0.14;\n    if (score >= 600) return monthlyIncome * 0.13;\n    return monthlyIncome * 0.12;\n  };\n\n  const formatCurrency = (value) => {\n    return `$${Number(value).toLocaleString()}`;\n  };\n\n  const data = creditRanges.map(score => ({\n    creditScore: score,\n    leaseAmount: Math.round(getLeaseAmount(score)),\n  }));\n\n  return (\n    <div className=\"w-full\">\n      <h3 className=\"text-center text-xl font-semibold mb-4\">Credit Score vs Monthly Payment</h3>\n      <ResponsiveContainer width=\"100%\" height={350}>\n        <LineChart data={data} margin={{ top: 20, right: 40, bottom: 40, left: 20 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          \n          {/* X Axis */}\n          <XAxis dataKey=\"creditScore\">\n            <Label value=\"Credit Score\" offset={-10} position=\"insideBottom\" />\n          </XAxis>\n\n          {/* Y Axis */}\n          <YAxis\n            tickFormatter={formatCurrency}\n          >\n            <Label\n              value=\"Monthly Payment\"\n              angle={-90}\n              position=\"insideLeft\"\n              style={{ textAnchor: 'middle' }}\n            />\n          </YAxis>\n\n          {/* Tooltip */}\n          <Tooltip formatter={(value) => formatCurrency(value)} labelFormatter={(label) => `Score: ${label}`} />\n\n          {/* Line */}\n          <Line\n            type=\"linear\"\n            dataKey=\"leaseAmount\"\n            stroke=\"#3b82f6\"\n            strokeWidth={3}\n            dot={{ r: 6, stroke: '#3b82f6', strokeWidth: 2, fill: 'white' }}\n            label={({ x, y, value }) => (\n              <text x={x} y={y - 10} textAnchor=\"middle\" fill=\"#333\" fontSize={12}>\n                {formatCurrency(value)}\n              </text>\n            )}\n          />\n\n          {/* Red dashed vertical line for user's credit score */}\n          <ReferenceLine\n            x={creditScore}\n            stroke=\"red\"\n            strokeDasharray=\"4 4\"\n            ifOverflow=\"visible\"\n            label={{\n                value: `Your Score (${creditScore})`,\n                position: 'top',\n                fill: 'red',\n                fontWeight: 'bold',\n                fontSize: 12,\n            }}\n            />\n\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default LeaseApprovalChart;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}